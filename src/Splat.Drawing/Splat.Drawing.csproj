<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>$(SplatUiFinalTargetFrameworks)</TargetFrameworks>
    <RootNamespace>Splat</RootNamespace>
    <Authors>.NET Foundation and Contributors</Authors>
    <Description>A library to make things cross-platform that should be</Description>
    <PackageId>Splat.Drawing</PackageId>
    <Nullable>enable</Nullable>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOsPlatform('Windows'))">
    <EnableWindowsTargeting>true</EnableWindowsTargeting>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.StartsWith('net8.0')) or $(TargetFramework.StartsWith('net9.0'))">
    <IsAotCompatible>true</IsAotCompatible>
  </PropertyGroup>
  <PropertyGroup Condition="($(TargetFramework.EndsWith('-windows10.0.17763.0')) or $(TargetFramework.StartsWith('net4'))) and $([MSBuild]::IsOsPlatform('Windows'))">
    <UseWPF>true</UseWPF>
    <UseWindowsForms>true</UseWindowsForms>
  </PropertyGroup>
  <ItemGroup>
    <Using Remove="System.Drawing"/>
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Platforms\**\*.cs"/>
    <Compile Remove="Resources\**\*.*"/>
    <EmbeddedResource Remove="Platforms\**\*.*"/>
    <None Include="Platforms\**\*.cs"/>
    <None Include="Colors\**\*.cs"/>
    <None Include="Resources\**\*.*"/>
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">
    <PackageReference Include="System.Diagnostics.Contracts"/>
    <PackageReference Include="System.Runtime.Serialization.Primitives"/>
    <PackageReference Include="System.Drawing.Primitives"/>
    <Compile Include="Platforms\ReflectionStubs.cs"/>
  </ItemGroup>
  <ItemGroup Condition=" !$(TargetFramework.StartsWith('netstandard')) ">
    <Compile Include="Platforms\ServiceLocationDrawingInitialization.cs"/>
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('net4')) ">
    <Compile Include="Platforms\net4\**\*.cs"/>
    <Compile Include="Platforms\TypeForwardedSystemDrawing.cs"/>
    <Compile Include="Platforms\ReflectionStubs.cs"/>
    <PackageReference Include="System.Drawing.Primitives"/>
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('net46')) ">
    <PackageReference Include="System.ValueTuple"/>
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.EndsWith('0-windows10.0.17763.0'))">
    <Compile Include="Platforms\net6\**\*.cs"/>
    <Compile Include="Platforms\TypeForwardedSystemDrawing.cs"/>
    <Compile Include="Platforms\ReflectionStubs.cs"/>
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.EndsWith('0-ios')) or $(TargetFramework.EndsWith('0-tvos')) or $(TargetFramework.EndsWith('0-maccatalyst'))">
    <Compile Include="Platforms\Cocoa\**\*.cs"/>
    <Compile Include="Platforms\TypeForwardedSystemDrawing.cs"/>
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.Mac')) ">
    <Compile Include="Platforms\Cocoa\**\*.cs"/>
    <Reference Include="System.Runtime.Serialization"/>
    <Reference Include="netstandard"/>
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.EndsWith('0-macos'))">
    <Compile Include="Platforms\Cocoa\**\*.cs"/>
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
    <Compile Include="Platforms\Android\**\*.cs"/>
    <Compile Include="Platforms\TypeForwardedSystemDrawing.cs"/>
    <Compile Include="Resources\**\*.cs"/>
    <Reference Include="System.Runtime.Serialization"/>
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.EndsWith('0-android'))">
    <Compile Include="Platforms\Android\**\*.cs"/>
    <Compile Include="Platforms\TypeForwardedSystemDrawing.cs"/>
    <Compile Include="Resources\**\*.cs"/>
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('tizen')) ">
    <Compile Include="Platforms\Tizen\**\*.cs"/>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Splat\Splat.csproj"/>
  </ItemGroup>
</Project>
